{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./header/header.component\";\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction AppComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵelementStart(1, \"P\");\n    i0.ɵɵtext(2, \" It is now up to you!\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" Hello \", ctx_r2.person, \"\");\n  }\n}\nfunction AppComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" The database is not connected, launch the back-end and refresh this page\\n\");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(appService) {\n      this.appService = appService;\n      this.title = 'angular-nodejs-example';\n      this.connected = false;\n    }\n    ngOnInit() {\n      this.appService.getPerson().subscribe(person => {\n        this.person = person;\n        this.connected = true;\n      });\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AppService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"thenBlock\", \"\"], [\"elseBlock\", \"\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header\");\n          i0.ɵɵtemplate(1, AppComponent_div_1_Template, 1, 0, \"div\", 0);\n          i0.ɵɵtemplate(2, AppComponent_ng_template_2_Template, 3, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(4, AppComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(3);\n          const _r3 = i0.ɵɵreference(5);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.connected)(\"ngIfThen\", _r1)(\"ngIfElse\", _r3);\n        }\n      },\n      dependencies: [i2.NgIf, i3.HeaderComponent],\n      styles: [\".mrgnbtm[_ngcontent-%COMP%]{margin-top:20px}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}